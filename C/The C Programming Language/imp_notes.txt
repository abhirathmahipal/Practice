General
The compiler assumes that the return type is int if you fail to specify any return type.

Chapter - 1

An int is used instead of a char to read a character input so that we can be sure the variable is large enough to store the EOF variable.

EOF variable is defined by an integer in <stdio.h>. To be on the safer side and not causing an overflow an int is used.

Sometimes it's better to use a long. longs are atleast of 32 bytes in size. On some machines ints take up 16 bits. You might end up overflowing them with ease on some machines

The standard library ensures that an input text stream appears as a sequence of lines, each terminated by a newline.

for (nc = 0; getchar() != EOF; ++nc)
    ;

In case you need a for loop to be empty. It can be done this way. By definition the for loop needs a body. Therefore the ; after the for loop.

chars are just small integers (8 bits).

Functions are pass by value. They pass a temporary value. However when arrays are passed, only the address of the array is passed. There is no copying of array elements.

local variables created as a result of function calls are also called automatic variables.

If global variables are declared before the function definition, the functions can use the variable without requiring extern. However if  afunction uses a global variable called max that will be processed by the compiler before it reaches the actual definition of max extern needs to be used.

main() can be used instead of main(void). main(void) is written for compatability with older compilers.

Chapter - 2

Floating points may be done in single precision. You long double type for extended precision.

Variable names are made up of letters and digits. _ can also be used. Not advisable to start variables with _ because libraries often use such names. Traditional C practice is to use lower case for variable names and all upper case for symbolic constants.

The standard guarantees uniqueness of external variables only for n characters and some specified case. Read more about it here
http://stackoverflow.com/questions/1980939/kr-at-least-the-first-31-characters-of-an-internal-name-are-significant

long int counter is the same as long counter; short int sh is the same as short sh;

A long constant is written with a terminal l. unsigned constants are written with a terminal u or U. The suffix UL indicates unsigned long.
Floating point constants contain a decimal point or an exponent (1e-2) or both. The value of an integer can be specified in octal or hexadecimal instead of decimal. A leading 0(zero) indicated octal representation. ox represents hexadecimal. octal and hexadecimal can also be followed by L to make them long and U to make them unsigned. 0XFUL is an unsigned long constant with the value 15 decimal.

A char constant is an integer written as one character within single quotes such as 'x'. The value of a character is the numeric value of the character in the machines' character set. In ASCII '0' has the numeric value 48. Character constants participate in numeric operations just as any other integers (they are mostly used for comparisons eg c == 'a')

hexadecimal and octal can also be used after escape sequences. Bell or \a can be represented as \007 and \x7

Strings can be concatenated at compile time
"hello," " world" is equivalent to "hello, world"

enum boolean {NO, YES};
enum months {JAN = 1, FEB}; // it continues the pattern. Feb becomes 2, march 3 and so on.
Enums provide a convinient way to associate constant values with names, an alternative to #define with the advantage that the values can be generated automatically.

An explicitly initialized automatic variable is initialised each time the function or block it is in is entered. The initialiser may be any expression.

External and static variables are initialised to zero by default. Automatic variables for which there is no explicit initialiser have undefined values.

const qualifier indicates that the elements will not be altered.

% operator works only with ints. % cannot be applied to float or double.

&& has higher precedence than ||. != and == have higher precedence than =.

In general, the only automatic conversions are those that convert a "narrower" operanad into a "wider" one without losing information. Eg float + int. Expressions that lose information like assigning a longer integer to a smaller integer may draw a warning but they are not illegal.

arithmetic with chars. Printing a char is guaranteed that it will never be negative. 

When chars are converted into ints, the language does not specify whether variables of type char are signed or unsigned. When a char is converted to an int it can produce a negative integer on some machines.machines

For portability specify signed or unsigned if non character data is to be stored in char variables.
